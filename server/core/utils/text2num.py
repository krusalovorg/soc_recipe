import re

class TextToNumber:
    strings_of_numbers_ten = {
        11: 'одиннадцать',
        12: 'двенадцать',
        13: 'тринадцать',
        14: 'четырнадцать',
        15: 'пятнадцать',
        16: 'шестнадцать',
        17: 'семнадцать',
        18: 'восемнадцать',
        19: 'девятнадцать',
    }

    strings_of_numbers = {
        0: 'ноль',
        1: 'один',
        2: 'два',
        3: 'три',
        4: 'четыре',
        5: 'пять',
        6: 'шесть',
        7: 'семь',
        8: 'восемь',
        9: 'девять',
        10: 'десять',
        20: 'двадцать',
        30: 'тридцать',
        40: 'сорок',
        50: 'пятьдесят',
        60: 'шестьдесят',
        70: 'семьдесят',
        80: 'восемьдесят',
        90: 'девяносто',
        100: 'сто'
    }

    strings_of_numbers_dynamic = {
        0: 'ноль',
        1: 'один',
        2: 'два',
        3: 'три',
        4: 'четыре',
        5: 'пять',
        6: 'шесть',
        7: 'семь',
        8: 'восемь',
        9: 'девять',
        10: 'десять',
        11: 'одиннадцать',
        12: 'двенадцать',
        13: 'тринадцать',
        14: 'четырнадцать',
        15: 'пятнадцать',
        16: 'шестнадцать',
        17: 'семнадцать',
        18: 'восемнадцать',
        19: 'девятнадцать',
        20: 'двадцать',
        30: 'тридцать',
        40: 'сорок',
        50: 'пятьдесят',
        60: 'шестьдесят',
        70: 'семьдесят',
        80: 'восемьдесят',
        90: 'девяносто',
        100: 'сто'
    }

    strings_of_numbers_full_sub = {
        'ноль': 0,
        'один': 1,
        'два': 2,
        'три': 3,
        'четыре': 4,
        'пять': 5,
        'шесть': 6,
        'семь': 7,
        'восемь': 8,
        'девять': 9,
        'десять': 10,
        'двадцать': 20,
        'двадцать один': 21,
        'двадцать два': 22,
        'двадцать три': 23,
        'двадцать четыре': 24,
        'двадцать пять': 25,
        'двадцать шесть': 26,
        'двадцать семь': 27,
        'двадцать восемь': 28,
        'двадцать девять': 29,
        'тридцать': 30,
        'тридцать один': 31,
        'тридцать два': 32,
        'тридцать три': 33,
        'тридцать четыре': 34,
        'тридцать пять': 35,
        'тридцать шесть': 36,
        'тридцать семь': 37,
        'тридцать восемь': 38,
        'тридцать девять': 39,
        'сорок': 40,
        'сорок один': 41,
        'сорок два': 42,
        'сорок три': 43,
        'сорок четыре': 44,
        'сорок пять': 45,
        'сорок шесть': 46,
        'сорок семь': 47,
        'сорок восемь': 48,
        'сорок девять': 49,
        'пятьдесят': 50,
        'пятьдесят один': 51,
        'пятьдесят два': 52,
        'пятьдесят три': 53,
        'пятьдесят четыре': 54,
        'пятьдесят пять': 55,
        'пятьдесят шесть': 56,
        'пятьдесят семь': 57,
        'пятьдесят восемь': 58,
        'пятьдесят девять': 59,
        'шестьдесят': 60,
        'шестьдесят один': 61,
        'шестьдесят два': 62,
        'шестьдесят три': 63,
        'шестьдесят четыре': 64,
        'шестьдесят пять': 65,
        'шестьдесят шесть': 66,
        'шестьдесят семь': 67,
        'шестьдесят восемь': 68,
        'шестьдесят девять': 69,
        'семьдесят': 70,
        'семьдесят один': 71,
        'семьдесят два': 72,
        'семьдесят три': 73,
        'семьдесят четыре': 74,
        'семьдесят пять': 75,
        'семьдесят шесть': 76,
        'семьдесят семь': 77,
        'семьдесят восемь': 78,
        'семьдесят девять': 79,
        'восемьдесят': 80,
        'восемьдесят один': 81,
        'восемьдесят два': 82,
        'восемьдесят три': 83,
        'восемьдесят четыре': 84,
        'восемьдесят пять': 85,
        'восемьдесят шесть': 86,
        'восемьдесят семь': 87,
        'восемьдесят восемь': 88,
        'восемьдесят девять': 89,
        'девяносто': 90,
        'девяносто один': 91,
        'девяносто два': 92,
        'девяносто три': 93,
        'девяносто четыре': 94,
        'девяносто пять': 95,
        'девяносто шесть': 96,
        'девяносто семь': 97,
        'девяносто восемь': 98,
        'девяносто девять': 99,
        'сто': 100,
        'сто один': 101,
        'сто два': 102,
        'сто три': 103,
        'сто четыре': 104,
        'сто пять': 105,
        'сто шесть': 106,
        'сто семь': 107,
        'сто восемь': 108,
        'сто девять': 109,
    }

    __result = "одиннадцать|двенадцать|тринадцать|четырнадцать|пятнадцать|шестнадцать|семнадцать|восемнадцать|девятнадцать|двадцать" \
               "|двадцать один|двадцать два|двадцать три|двадцать четыре|двадцать пять|двадцать шесть|двадцать семь|двадцать восемь" \
               "|двадцать девять|тридцать|тридцать один" \
               "|тридцать два|тридцать три|тридцать четыре|тридцать пять|тридцать шесть|тридцать семь|тридцать восемь|тридцать девять" \
               "|сорок|сорок один|сорок два|сорок три|сорок четыре|сорок пять|сорок шесть|сорок семь|сорок восемь|сорок девять|пятьдесят" \
               "|пятьдесят один|пятьдесят два|пятьдесят три|пятьдесят четыре|пятьдесят пять|пятьдесят шесть|пятьдесят семь|пятьдесят восемь" \
               "|пятьдесят девять|шестьдесят|шестьдесят один|шестьдесят два|шестьдесят три|шестьдесят четыре|шестьдесят пять|шестьдесят шесть" \
               "|шестьдесят семь|шестьдесят восемь|шестьдесят девять|семьдесят|семьдесят один|семьдесят два|семьдесят три|семьдесят четыре" \
               "|семьдесят пять|семьдесят шесть|семьдесят семь|семьдесят восемь|семьдесят девять|восемьдесят|восемьдесят один|восемьдесят два" \
               "|восемьдесят три|восемьдесят четыре|восемьдесят пять|восемьдесят шесть|восемьдесят семь|восемьдесят восемь|восемьдесят девять" \
               "|девяносто|девяносто один|девяносто два|девяносто три|девяносто четыре|девяносто пять|девяносто шесть|девяносто семь|девяносто восемь" \
               "|девяносто девять|сто|сто один|сто два|сто три|сто четыре|сто пять|сто шесть|сто семь|сто восемь|сто девять" \
               "|один|два|три|четыре|пять|шесть|семь|восемь|девять"

    def __init__(self):
        pass

    def train(self):
        # for value, key in self.strings_of_numbers_dynamic.items():
        #     del self.strings_of_numbers_dynamic[value]
        #     self.strings_of_numbers_dynamic[key] = value
        #     print(f"'{key}': {value},")
        # print(self.strings_of_numbers_dynamic)

        for number, key in list(self.strings_of_numbers_ten.items()):
            self.__result += f"{key}|"
        for number, key in list(self.strings_of_numbers.items())[11:]:
            self.__result += f"{key}|"
            # self.strings_of_numbers_dynamic[f"{key}"] = number
            for number_2, key_2 in list(self.strings_of_numbers.items())[1:10]:
                self.__result += f"{key} {key_2}|"
                # self.strings_of_numbers_dynamic[f"{key} {key_2}"] = number+number_2
        for number, key in list(self.strings_of_numbers.items())[1:10]:
            self.__result += f"{key}|"

        self.__result += "\n"

        # for key, value in self.strings_of_numbers_dynamic.items():
        #     print(f"'{key}': {value},")

        return self.__result

    def parse(self, text):
        results = re.findall(self.__result, text, re.MULTILINE)
        if len(results) > 1:
            res_num = 0
            for res in results:
                res_num += self.strings_of_numbers_full_sub[res]
            for i, res in enumerate(results):
                if i == 0:
                    text = text.replace(" "+res, "")
                elif i == len(results)-1:
                    text = text.replace(res, str(res_num))
                else:
                    text = text.replace(res, "")
        else:
            while True:
                res = re.search(self.__result, text, re.MULTILINE)
                if res:
                    res = res.group()
                    text = text.replace(res, str(self.strings_of_numbers_full_sub[res]))
                else:
                    break
        return text

if __name__ == '__main__':
    ttn = TextToNumber()
    #print(ttn.parse("включи звук на сто"))
    print(ttn.parse("включи звук на двадцать один"))

#by krusalovorg krusalovorg@gmail.com